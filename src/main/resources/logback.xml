<!-- <?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<appender name="consoleAppender"
		class="ch.qos.logback.core.ConsoleAppender">
		encoders are responsible for transforming an incoming event into a 
			byte array and writing out the resulting byte array onto the appropriate 
			OutputStream.
		<encoder>
			<Pattern>.%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg %n
			</Pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>TRACE</level>
		</filter>
	</appender>
	The first RollingFileAppender sub-component, namely RollingPolicy, 
		is responsible for undertaking the actions required for a rollover. A second 
		sub-component of RollingFileAppender, namely TriggeringPolicy, will determine 
		if and exactly when rollover occurs. Thus, RollingPolicy is responsible for 
		the what and TriggeringPolicy is responsible for the when. To be of any use, 
		a RollingFileAppender must have both a RollingPolicy and a TriggeringPolicy 
		set up. However, if its RollingPolicy also implements the TriggeringPolicy 
		interface, then only the former needs to be specified explicitly â€“ this is 
		exactly the case in the example, where TimeBasedRollingPolicy is used. This 
		assumes the responsibility for rollover as well as for the triggering of 
		said rollover, by implementing both RollingPolicy and TriggeringPolicy interfaces.
	<appender name="dailyRollingFileAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>~/Users/sohan/log/rest-demo.log</File>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			daily rollover
			<FileNamePattern>rest-demo.%d{yyyy-MM-dd}.log</FileNamePattern>

			keep 30 days' worth of history
			<maxHistory>30</maxHistory>
		</rollingPolicy>

		<encoder>
			<Pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{35} - %msg %n
			</Pattern>
		</encoder>
	</appender>
	<appender name="minuteRollingFileAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			rollover every minute
			<FileNamePattern>c:/tmp/minutes/rest-demo-minute.%d{yyyy-MM-dd_HH-mm}.log
			</FileNamePattern>

			keep 30 minutes' worth of history
			<maxHistory>30</maxHistory>
		</rollingPolicy>

		<encoder>
			<Pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n
			</Pattern>
		</encoder>
	</appender>
 	<appender name="asyncAppender"
		class="ch.qos.logback.classic.AsyncAppender">
				<appender-ref ref="minuteRollingFileAppender" />
		
	</appender>
	<logger name="com.service" additivity="false" level="ALL">
		<appender-ref ref="asyncAppender" />
		<appender-ref ref="dailyRollingFileAppender" />
		<appender-ref ref="consoleAppender" />
	</logger> 

	<root>
		<level value="INFO" />
		<appender-ref ref="consoleAppender" />
	</root>
</configuration> -->